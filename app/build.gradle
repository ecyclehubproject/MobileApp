plugins {
    id "com.android.application"
    id "kotlin-android"
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    kotlinOptions.useIR = true
    defaultConfig {
        applicationId "com.cyclehub"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled = true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources = true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        debug {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled = true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources = true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        viewBinding true
    }
    kapt {
        correctErrorTypes true
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}
kapt {
    javacOptions {
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.appcompat:appcompat:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation project(path: ':leku')
    implementation project(path: ':locus')

    // navigation
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //Other
    implementation 'com.airbnb.android:lottie:3.7.1'
    implementation 'me.relex:circleindicator:2.1.6'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'


    // Activity KTX for viewModels()
    implementation 'androidx.fragment:fragment-ktx:1.3.5'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"


    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    //coil
    implementation('io.coil-kt:coil:1.3.0')
    implementation 'io.coil-kt:coil-svg:1.3.0'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    // Preferences DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0-rc01'
    implementation 'com.razorpay:checkout:1.6.10'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    //Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.2.1")
    implementation 'com.github.dhaval2404:imagepicker:2.1'
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.1.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton:process-phoenix:2.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'

}